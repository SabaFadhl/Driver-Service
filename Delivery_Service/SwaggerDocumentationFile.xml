<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Delivery_Service</name>
    </assembly>
    <members>
        <member name="P:Delivery_Service.Application.Dto.DeliveryRequest.AddPickupOrderDto.OrderId">
            <summary>
            The OrderId is the identity of an order that created in OrderService
            </summary>
        </member>
        <member name="P:Delivery_Service.Application.Dto.DeliveryRequest.AddPickupOrderDto.OrderCode">
            <summary>
            The OrderCode is the Numer or Code of an order that created in OrderService.
            </summary>
        </member>
        <member name="P:Delivery_Service.Application.Dto.DeliveryRequest.AddPickupOrderDto.CompoundName">
            <summary>
            The CompoundName field represents Name or Short description to read it by Driver when view an orders on the list.
            This field may be restaurant name and some details
            </summary>
        </member>
        <member name="P:Delivery_Service.Application.Dto.DeliveryRequest.ChangeOrderStatusDto.Status">
            <summary>
            The Status should be: 'pickedup' or 'onway' or 'delivered'
            </summary>
        </member>
        <member name="P:Delivery_Service.Application.Dto.Driver.SetDriverAvailabilityStatusDto.Status">
            <summary>
            The Status should be: 'offline' or 'online'
            </summary>
        </member>
        <member name="M:Delivery_Service.Controllers.DeliveryRequestController.AddPickupOrderController.Add(Delivery_Service.Application.Dto.DeliveryRequest.AddPickupOrderDto)">
            <summary>
            To allow RestaurantService to send the new orders in order to deliver.
            </summary>
            <param name="addDeliveryDto">Driver Information.</param>
            <returns></returns>
        </member>
        <member name="M:Delivery_Service.Controllers.DeliveryRequestController.ChangeDeliveryRequestStatusController.ChangeDeliveryRequestStatus(System.String,Delivery_Service.Application.Dto.DeliveryRequest.ChangeOrderStatusDto)">
            <summary>
            This API to allow Driver to accept(Picked Up) DeliveryRequest.
            </summary>
            <param name="driverId">Driver Id</param>
            <param name="deliveryRequestId">DeliveryRequestId</param>
            <returns></returns>
        </member>
        <member name="M:Delivery_Service.Controllers.DeliveryRequestController.ViewDeliveryRequestController.GetList(System.String)">
            <summary>
            This API to allow Driver to view all Delivery Request assigned to him.
            </summary>
            <param name="driverId">Driver Id</param>        
            <returns></returns>
        </member>
        <member name="M:Delivery_Service.Controllers.DriverController.DeleteDriverController.Delete(System.String)">
            <summary>
            This API to allow system admin or driver to delete the driver user.
            </summary>
            <param name="driverId">Driver identity</param>
            <returns></returns>
        </member>
        <member name="M:Delivery_Service.Controllers.DriverController.GetDriverController.Get(System.String)">
            <summary>
            This API to allow system admin to view Driver by Id
            </summary>
            <param name="driverId">Driver identity</param>
            <returns></returns>
        </member>
        <member name="M:Delivery_Service.Controllers.DriverController.GetDriverListController.GetList(System.Int32,System.Int32)">
            <summary>
            This API to allow system admin to view all available Drivers
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Delivery_Service.Controllers.DriverController.GetDriverOrdersListController.GetList(System.String)">
            <summary>
            This API Allowing the driver to view the current orders he has.
            </summary>
            <param name="driverId"></param>         
            <returns></returns>
        </member>
        <member name="M:Delivery_Service.Controllers.DriverController.UpdateDriverController.Update(System.String,Delivery_Service.Application.Dto.Driver.UpdateDriverDto)">
            <summary>
            To allow Driver or system admin to Update Driver information.
            </summary>
            <param name="driverId">Driver identity</param>
            <param name="updateDriverDto">Driver information.</param>
            <returns></returns>
        </member>
        <member name="T:Delivery_Service.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:Delivery_Service.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Delivery_Service.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Delivery_Service.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:DeliveryService.Controllers.DeliveryController.AddDriverController.Add(Delivery_Service.Application.Dto.Driver.AddDriverDto)">
            <summary>
            To add new Driver.
            </summary>
            <param name="addDeliveryDto">Driver Information.</param>
            <returns></returns>
        </member>
        <member name="M:DeliveryService.Controllers.DeliveryController.ChangeAvailabilityStatusController.ChangeDeliveryStatus(System.String,Delivery_Service.Application.Dto.Driver.SetDriverAvailabilityStatusDto)">
            <summary>
            This API for Changing the driver availablility status
            </summary>
            <param name="DriverId">The Driver Identiry (Should be GUID/UUID)</param>
            <param name="setDriverAvailabilityStatusDto">The Status should be: 'offline' or 'online'</param>      
            <returns>NoContent (204)</returns>
        </member>
        <member name="M:CustomerService.Controllers.CustomerController.DriverLoginController.Login(Delivery_Service.Application.Dto.Driver.DriverLoginDto)">
            <summary>
            This API to allow Driver to Login.
            </summary>
            <param name="loginDriverDto">Driver login Credentials.</param>
            <returns></returns>
        </member>
    </members>
</doc>
